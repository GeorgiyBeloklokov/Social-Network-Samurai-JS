{"version":3,"sources":["components/Dialogs/DialogsForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["maxLength10","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","Dialogs","AddDialogPost","values","sendDialogPost","newMessageBody","this","dialogsElements","dialogs","map","z","DialogIthem","url","id","dialogsElementsRightSide","personsside","messagesElements","messages","m","Message","message","messagesElementsRightSide","messagesside","className","f","dialogIthem","rightside","React","Component","compose","connect","state","dialogsPage","dispatch","addMessageAreaLeftSideActionCreator","WithAuthRedirect"],"mappings":"4PAMMA,EAAeC,YAAiB,IActBC,cAAW,CAACC,KAAM,wBAAlBD,EAbO,SAACE,GACpB,OACI,uBAAMC,SAAUD,EAAME,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,KAAK,iBAAiBC,YAAY,YAAYC,SAAU,CAACC,IAASb,OAElG,8BACI,iDCwCDc,E,kDA/CX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IACDW,cAAgB,SAACC,GAClBZ,EAAMa,eAAeD,EAAOE,iBAHjB,E,0CAOnB,WAWI,OAVAC,KAAKC,gBAAkBD,KAAKf,MAAMiB,QAC7BC,KAAI,SAAAC,GAAC,OAAI,cAACC,EAAA,EAAD,CAAaC,IAAKF,EAAEE,IAAgBf,KAAMa,EAAEb,KAAMgB,GAAIH,EAAEG,IAA1BH,EAAEG,OAC9CP,KAAKQ,yBAA2BR,KAAKf,MAAMwB,YACtCN,KAAI,SAAAC,GAAC,OAAI,cAACC,EAAA,EAAD,CAAaC,IAAKF,EAAEE,IAAgBf,KAAMa,EAAEb,KAAMgB,GAAIH,EAAEG,IAA1BH,EAAEG,OAE9CP,KAAKU,iBAAmBV,KAAKf,MAAM0B,SAC9BR,KAAI,SAAAS,GAAC,OAAI,cAACC,EAAA,EAAD,CAAoBC,QAASF,EAAEE,SAAjBF,EAAEL,OAC9BP,KAAKe,0BAA4Bf,KAAKf,MAAM+B,aACvCb,KAAI,SAAAS,GAAC,OAAI,cAACC,EAAA,EAAD,CAAoBG,aAAcJ,EAAEE,SAAtBF,EAAEL,OAG1B,gCAEI,sBAAKU,UAAWC,IAAEhB,QAAlB,UACI,qBAAKe,UAAWC,IAAEC,YAAlB,SACKnB,KAAKC,kBAEV,8BACKD,KAAKU,sBAGd,sBAAKO,UAAWC,IAAEE,UAAlB,UACI,8BACKpB,KAAKQ,2BAEV,8BACKR,KAAKe,4BAEV,cAAC,EAAD,CAAgB7B,SAAUc,KAAKJ,0B,GArC7ByB,IAAMC,W,QCmBbC,sBAAQC,aAnBD,SAACC,GACnB,MAAO,CACHvB,QAASuB,EAAMC,YAAYxB,QAC3BS,SAAUc,EAAMC,YAAYf,SAC5BF,YAAagB,EAAMC,YAAYjB,YAC/BO,aAAcS,EAAMC,YAAYV,iBAKf,SAACW,GACtB,MAAO,CACH7B,eAAgB,SAACC,GACb4B,EAASC,YAAoC7B,SAMY8B,IAAtDN,CAAwE5B","file":"static/js/4.767e65e0.chunk.js","sourcesContent":["import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../FornControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength10 =  maxLengthCreator(10);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMessageBody\" placeholder=\"Your text\" validate={[required,maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default  reduxForm ({form: \"dialogAddMessageForm\"}) (AddMessageForm)\r\n","import React from \"react\";\r\nimport f from \"./Dialogs.module.css\";\r\nimport DialogIthem from \"./DialogIthem/DialogIthem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./DialogsForm\";\r\n\r\nclass Dialogs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.AddDialogPost = (values) => {\r\n            props.sendDialogPost(values.newMessageBody);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.dialogsElements = this.props.dialogs\r\n            .map(z => <DialogIthem url={z.url} key={z.id} name={z.name} id={z.id}/>);\r\n        this.dialogsElementsRightSide = this.props.personsside\r\n            .map(z => <DialogIthem url={z.url} key={z.id} name={z.name} id={z.id}/>);\r\n\r\n        this.messagesElements = this.props.messages\r\n            .map(m => <Message key={m.id} message={m.message}/>);\r\n        this.messagesElementsRightSide = this.props.messagesside\r\n            .map(m => <Message key={m.id} messagesside={m.message}/>);\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className={f.dialogs}>\r\n                    <div className={f.dialogIthem}>\r\n                        {this.dialogsElements}\r\n                    </div>\r\n                    <div>\r\n                        {this.messagesElements}\r\n                    </div>\r\n                </div>\r\n                <div className={f.rightside}>\r\n                    <div>\r\n                        {this.dialogsElementsRightSide}\r\n                    </div>\r\n                    <div>\r\n                        {this.messagesElementsRightSide}\r\n                    </div>\r\n                    <AddMessageForm onSubmit={this.AddDialogPost} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","import {addMessageAreaLeftSideActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        personsside: state.dialogsPage.personsside,\r\n        messagesside: state.dialogsPage.messagesside\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendDialogPost: (newMessageBody) => {\r\n            dispatch(addMessageAreaLeftSideActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs);\r\n\r\n\r\n"],"sourceRoot":""}