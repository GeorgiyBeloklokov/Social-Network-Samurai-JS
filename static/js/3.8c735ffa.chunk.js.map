{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","utils/Buttons/InputCustom.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","assets/images/8841.jpg","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","statusPoiner","onDoubleClick","maxlength","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","profileDataFormHead","topProfileDataPartHeadtwo","createField","renderTextField","z","Input","type","contactFirstFormHeadTwo","Object","keys","contacts","map","key","buttonsProfileDataForm","Button","style","maxWidth","maxHeight","minWidth","minHeight","fontSize","textAlign","buttonFormaEditMode","color","variant","formSummaryError","onClick","to","InputCustom","savePhoto","classes","makeStyles","theme","root","margin","spacing","input","display","useStyles","accept","id","multiple","htmlFor","component","ProfileData","isOwner","goToEditMode","topProfileDataPartHead","topProfileDataPart","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactFirstFormHead","contactTitle","contactValue","buttonForma","Contact","contactsFirstForm","ProfileInfo","saveProfile","Preloader","profileInfo","profileInfoWrapper","pofileInfoTop","img1profile","src","photos","large","userPhoto","alt","savefile","target","files","length","ProfInfo","initialValues","formData","then","Post","d","image","message","ithem","like","maxLength10","maxLengthCreator","MyPosts","newAddPosTextArea","values","addPost","profileTextArea","this","postsElements","posts","p","likesCount","UserPhoto","AddProfilePageFormRedux","React","Component","Field","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","WithAuthRedirect","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.8c735ffa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1profile\":\"ProfileInfo_img1profile__1BIpq\",\"input\":\"ProfileInfo_input__27n1G\",\"buttonFormaEditMode\":\"ProfileInfo_buttonFormaEditMode__2mJX5\",\"buttonForma\":\"ProfileInfo_buttonForma__2v8SL\",\"status\":\"ProfileInfo_status__2Bvpf\",\"savefile\":\"ProfileInfo_savefile__1-kyH\",\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__zSaid\",\"topProfileDataPart\":\"ProfileInfo_topProfileDataPart__1R-AN\",\"contactsFirstForm\":\"ProfileInfo_contactsFirstForm__1ha9n\",\"topProfileDataPartHead\":\"ProfileInfo_topProfileDataPartHead__2bmg8\",\"topProfileDataPartHeadtwo\":\"ProfileInfo_topProfileDataPartHeadtwo__1yFEQ\",\"contactFirstFormHead\":\"ProfileInfo_contactFirstFormHead__2qVjl\",\"contactFirstFormHeadTwo\":\"ProfileInfo_contactFirstFormHeadTwo__3gBgW\",\"ProfInfo\":\"ProfileInfo_ProfInfo__U6Bec\",\"buttonsProfileDataForm\":\"ProfileInfo_buttonsProfileDataForm__3dJSK\",\"statusPoiner\":\"ProfileInfo_statusPoiner__2Z7q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Profile_head__21dot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ithem\":\"MyPosts_ithem__RF_K1\",\"image\":\"MyPosts_image__ACyce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Post_image__3I5IA\",\"ithem\":\"Post_ithem__3DOYI\"};","import React, {useEffect, useState} from \"react\";\r\nimport style from \"./ProfileInfo.module.css\"\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=> {setStatus(props.status);},[props.status]\r\n    );\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n        const deactivateEditMode =() => {\r\n            setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const OnStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div  >\r\n            {!editMode &&\r\n            <div> <b>My Status: </b>\r\n                    <span className={s.statusPoiner}\r\n                        onDoubleClick={activateEditMode}>{props.status || \"Double click  here for edit \"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input maxlength=\"80\" onChange={OnStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport {createField, Input, renderTextField, Textarea} from \"../../FornControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../FornControls/FormsControls.module.css\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div className={s.profileDataFormHead}>\r\n        <div className={s.topProfileDataPartHeadtwo}>\r\n            <div>\r\n                <b>My Name:</b> {createField(\"Full Name\", \"fullName\", [], renderTextField)}\r\n            </div>\r\n            <div className={s.z}>\r\n                <b>About me: </b>\r\n                {createField(\"Enter about me\", \"aboutMe\", [], renderTextField)}\r\n            </div>\r\n\r\n            <div><b>Looking for a job :</b>{createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div><b>My pro skills:</b></div>\r\n            {createField(\"Enter pro skills\", \"lookingForAJobDescription\", [], renderTextField)}\r\n        </div>\r\n\r\n        <div className={s.contactFirstFormHeadTwo}>\r\n            <b> Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], renderTextField)} </b>\r\n            </div>\r\n\r\n        })}\r\n        </div>\r\n        </div>\r\n        <div className={s.buttonsProfileDataForm}>\r\n        <div><Button style={{\r\n            maxWidth: '5.8rem',\r\n            maxHeight: '1.5rem',\r\n            minWidth: '2.4rem',\r\n            minHeight: '1rem',\r\n            fontSize: '0.5rem',\r\n            textAlign: 'center'\r\n        }} className={s.buttonFormaEditMode} color=\"primary\" variant=\"contained\" type=\"submit\">Save</Button></div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <Button style={{\r\n                maxWidth: '5.8rem',\r\n                maxHeight: '1.5rem',\r\n                minWidth: '2.4rem',\r\n                minHeight: '1rem',\r\n                fontSize: '0.5rem',\r\n                textAlign: 'center'\r\n            }} className={s.buttonFormaEditMode} color=\"primary\" variant=\"contained\" type=\"submit\" onClick={()=><NavLink to={'/profile'}/>}  >Dont Save</Button>\r\n        </div>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\n\r\nexport const InputCustom = (props) => {\r\n\r\nlet savePhoto = props.savePhoto;\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={savePhoto}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button  style={{maxWidth: '5.8rem', maxHeight: '1.5rem', minWidth: '2.4rem', minHeight: '1rem', fontSize:'0.5rem', textAlign:'center'}}  variant=\"contained\" color=\"primary\" component=\"span\">\r\n                    Upload Image\r\n                </Button>\r\n            </label>\r\n            {/*<input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n            <label htmlFor=\"icon-button-file\">\r\n                <IconButton   color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                    <PhotoCamera fontSize=\"medium\"/>\r\n                </IconButton>\r\n            </label>*/}\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/ava1.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {InputCustom} from \"../../../utils/Buttons/InputCustom\";\r\n\r\n\r\nconst ProfileInfo = ({isOwner, profile, status, updateStatus, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.status}>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n            <div className={s.profileInfoWrapper}>\r\n\r\n                <div className={s.pofileInfoTop}>\r\n                    <hr/>\r\n                    <div>\r\n                        < img className={s.img1profile}\r\n                              src={profile.photos.large || userPhoto} alt=\"img\"/>\r\n                        {isOwner && <div className={s.savefile}><InputCustom savePhoto={onMainPhotoSelected}/></div>}\r\n                    </div>\r\n                </div>\r\n                <div className={s.ProfInfo}>\r\n                    {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div className={s.topProfileDataPartHead}>\r\n                <div className={s.topProfileDataPart}>\r\n                    <b>My Name:</b> {profile.fullName}\r\n                </div>\r\n                <div className={s.topProfileDataPart}>\r\n                    <b>About me: </b> {profile.aboutMe}\r\n                </div>\r\n\r\n                <div className={s.topProfileDataPart}><b>Looking for a job :</b>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                <div className={s.topProfileDataPart}><b>Descripcion:</b> {profile.lookingForAJobDescription}</div>\r\n                }\r\n            </div>\r\n\r\n            <div className={s.contactFirstFormHead}>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n            <div className={s.buttonForma}>\r\n                {isOwner && <div><Button style={{\r\n                    maxWidth: '5.8rem',\r\n                    maxHeight: '1.5rem',\r\n                    minWidth: '2.4rem',\r\n                    minHeight: '1rem',\r\n                    fontSize: '0.5rem',\r\n                    textAlign: 'center'\r\n                }} color=\"primary\" variant=\"contained\" onClick={goToEditMode}>Edit</Button></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            <div className={s.contactsFirstForm}><b>{contactTitle}</b> : {contactValue} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport d from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n    return <div>\r\n        <div>\r\n            < img className={d.image}\r\n                  src= 'https://slovami.net/wp-content/uploads/2018/04/11-27.jpg' alt=\" \"/>\r\n        </div>\r\n        {props.message}\r\n\r\n        <div className={d.ithem}>Post</div>\r\n        {props.like}\r\n        <span> Likes </span>\r\n\r\n    </div>\r\n}\r\nexport default Post;","export default __webpack_public_path__ + \"static/media/8841.9f15c563.jpg\";","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport UserPhoto from \"../../../assets/images/8841.jpg\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../FornControls/FormsControls\";\r\n\r\nconst maxLength10 =  maxLengthCreator(10);\r\n\r\nclass MyPosts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.newAddPosTextArea = (values) => {\r\n            this.props.addPost(values.profileTextArea);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.postsElements = this.props.posts\r\n            .map(p => <Post message={p.message} like={p.likesCount} key={p.id}/>);\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    < img className={s.image}\r\n                          src={UserPhoto}\r\n                          alt=\" \"/>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div className={s.ithem}>My post</div>\r\n                    </div>\r\n                    <div>\r\n                        <AddProfilePageFormRedux onSubmit={this.newAddPosTextArea} />\r\n                    </div>\r\n                </div>\r\n                {this.postsElements}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet textProfilePage = (props) => {\r\n    return (\r\n         <form onSubmit={props.handleSubmit}>\r\n             <div>\r\n                 <Field component={Textarea} name=\"profileTextArea\" placeholder=\"Your text\" validate={[required,maxLength10]}/>\r\n             </div>\r\n             <div><button>Add</button> </div>\r\n         </form>\r\n        )\r\n}\r\n\r\nconst AddProfilePageFormRedux = reduxForm ({form: \"addProfileTextArea\"}) (textProfilePage)\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (profileTextArea) => {\r\n            dispatch(addPostActionCreator(profileTextArea));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} saveProfile={props.saveProfile} savePhoto={props.savePhoto} status={props.status} isOwner = {props.isOwner} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n        componentDidUpdate(prevProps, prevState, snapshot) {\r\n            if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n                this.refreshProfile()\r\n            }\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner = {!this.props.match.params.userId } savePhoto={this.props.savePhoto} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(WithAuthRedirect,connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n}), withRouter)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}